// Import the nodemailer module
import nodemailer from "nodemailer";

// Class for handling email transport
class mailer {
    // Constructor to initialize the transporter with OAuth2 authentication
    init(clientId, clientSecret, refreshToken, user) {
        // Create a transporter using OAuth2 authentication
        const transporter = nodemailer.createTransport({
            service: "gmail",
            auth: {
                type: "OAuth2",
                user,
                clientId,
                clientSecret,
                refreshToken
            }
        });

        // Assign the transporter to the instance
        this.transporter = transporter;
    }

    // Method to send plain text emails
    send(from, to, subject, text) {
        // Create mail options
        const mailOptions = {
            from,
            to,
            subject,
            text
        };

        // Return a Promise to handle the asynchronous nature of sendMail
        return new Promise((resolve, reject) => {
            // Send the email
            this.transporter.sendMail(mailOptions, (err, info) => {
                // Check for errors
                if (err) {
                    // If an error occurs, reject the Promise with the error
                    reject(err);
                } else {
                    // If successful, resolve the Promise with the info
                    resolve(info);
                }
            });
        });
    }

    // Method to send HTML emails
    sendHTML(from, to, subject, html) {
        // Create mail options
        const mailOptions = {
            from,
            to,
            subject,
            html
        };

        // Return a Promise to handle the asynchronous nature of sendMail
        return new Promise((resolve, reject) => {
            // Send the email
            this.transporter.sendMail(mailOptions, (err, info) => {
                // Check for errors
                if (err) {
                    // If an error occurs, reject the Promise with the error
                    reject(err);
                } else {
                    // If successful, resolve the Promise with the info
                    resolve(info);
                }
            });
        });
    }
}

// Export an instance of the mailer class
export default new mailer();
